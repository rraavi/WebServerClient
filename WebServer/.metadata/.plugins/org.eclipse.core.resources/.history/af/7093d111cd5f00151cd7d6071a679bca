#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <string.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <netdb.h>

void error(char *msg)
{
	perror(msg);
}

int main(int argc, char **argv)
{
	int sockfd, pno, n, by_rv;
	char buf[2000];
	char filename[2000];
	struct sockaddr_in s_addr;
	size_t sztord,sztord1;
	socklen_t addr_sz = sizeof(struct sockaddr);
	FILE *fp;
	if (argc < 3)
	{
		fprintf(stderr,"enter %s Hostaddr Portno Filename\n",argv[0]);
		exit(0);
	}
	//pno = atoi(argv[2]);
	strcpy(filename,argv[2]);
	puts(filename);
	sockfd = socket(AF_INET, SOCK_DGRAM, 0);
	if(sockfd<0)
	{
		error("ERROR WHILE OPENING SOCKET");
		exit(0);
	}
   bzero(&s_addr,sizeof(s_addr));
   s_addr.sin_family = AF_INET;
   s_addr.sin_addr.s_addr=inet_addr(argv[1]);
   s_addr.sin_port=htons(pno);
   if((sendto(sockfd, filename, strlen(filename), 0, (struct sockaddr*)&s_addr, addr_sz))<0)
   {
	   error("ERROR IN SENDING\n");
	   exit(0);
   }
   if ((recvfrom(sockfd, (size_t*)&sztord, sizeof(sztord), 0, (struct sockaddr*)&s_addr, &addr_sz)) < 0)
   {
	   error("ERROR IN RECEIVING \n");
   	   exit(0);
   }
   if(sztord<0)
   {
	   error("ERROR IN SIZE TO READ \n");
	   exit(0);
   }
   if((sztord1 = recvfrom(sockfd, buf, sizeof(buf), 0, (struct sockaddr*)&s_addr, &addr_sz)) < 0)
   {
	   printf("ERROR ");
	   exit(0);
   }
   printf("%s", buf);
   close(sockfd);
}
