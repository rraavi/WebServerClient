#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <string.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <netdb.h>

void error(char *msg)
{
	perror(msg);
}

int main(int argc, char **argv)
{
	int pno;
	int sockfd;
	struct sockaddr_in s_addr;
	socklen_t addrsize = sizeof(struct sockaddr);
	char buffer_r[2000];
	char *filename;
	size_t sztord = 0;
	size_t szrd =0;
	pno = atoi(argv[1]);

	if(argc<4)
	{
		error("Usage: <%s><Address><pno><FILE name>\n", argv[0]);
	    exit(0);
	}

	if ((sockfd = socket(AF_INET, SOCK_DGRAM, 0)) < 0)
	{
		error("ERROR IN SOCKET\n");
		exit(0);
	}
    s_addr.sin_family = AF_INET;
    s_addr.sin_port = htons(atoi(argv[2]));
    s_addr.sin_addr.s_addr = inet_addr(argv[1]);
    filename = argv[3];
    if((sendto(sockfd, filename, strlen(filename), 0, (struct sockaddr*)&s_addr, addrsize))<0)
    {
    	error("ERROR IN SENDING\n");
	    exit(0);
	}
	if((recvfrom(sockfd, (size_t*)&sztord, sizeof(sztord), 0, (struct sockaddr*)&s_addr, &addrsize))<0)
	{
		error("ERROR IN RECEIVING");
	    exit(0);
	}
	printf("Size of file: %lu\n", sztord);
	if (sztord < 0)
	 {
		error("ERROR TO READ < 0\n");
		exit(0);
	 }
	 if((szrd = recvfrom(sockfd, buffer_r, sizeof(buffer_r), 0, (struct sockaddr*)&s_addr, &addrsize))<0)
	 {
		 error("ERROR WHILE RECEIVING");
	     exit(0);
	 }
     printf("%s", buffer_r);
     close(sockfd);
     return 0;
}
